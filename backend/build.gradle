plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.graalvm.buildtools.native' version '0.9.28'
}

group = 'cafe.hoyoverse'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.springframework.session:spring-session-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

graalvmNative {
    binaries {
        main {
            // For non english system compatibility
            buildArgs.add('-H:-CheckToolchain')

//			imageName = 'migtool'
//			mainClass = 'io.seqera.migtool.App'
//			configurationFileDirectories.from(file('conf'))
//
//			buildArgs(org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem.isLinux() ? ['--static', ] : [])
//			buildArgs.add('--allow-incomplete-classpath')
//			buildArgs.add('--report-unsupported-elements-at-runtime')
//			buildArgs.add('--initialize-at-run-time=sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder')
//			buildArgs.add('-H:+AddAllCharsets')
//			buildArgs.add('-H:EnableURLProtocols=https,http')
//			buildArgs.add('-H:+ReportExceptionStackTraces')
//			buildArgs.add('-H:+StaticExecutableWithDynamicLibC')
//			buildArgs.add('-H:+PrintClassInitialization')
        }
    }
}